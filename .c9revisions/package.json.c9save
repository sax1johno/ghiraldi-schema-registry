{"ts":1360024874993,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360024893167,"patch":[[{"diffs":[[1,"{\n  \"name\": \"CardBlanc\",\n  \"description\": \"The web application portion of CardBlanc\",\n  \"version\": \"0.0.2\",\n   \"engines\": {\n    \"node\": \"0.8.1\",\n    \"npm\":  \"1.1.49\"\n  },\n  \"author\": {\n    \"name\": \"John O'Connor\",\n    \"email\": \"john@catalyzingconcepts.com\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John O'Connor\",\n      \"email\": \"john@catalyzingconcepts.com\"\n    }\n  ],\n  \"dependencies\": {\n    \"mongoose\": \"*\",\n    \"mongodb\": \"1.1.3\"\n  }\n}"]],"start1":0,"start2":0,"length1":0,"length2":444}]],"length":444,"saved":false}
{"ts":1360024898356,"patch":[[{"diffs":[[0," \"*\""],[-1,","],[0,"\n  "],[-1,"  \"mongodb\": \"1.1.3\"\n"],[0,"  }\n"]],"start1":410,"start2":410,"length1":33,"length2":11}]],"length":422,"saved":false}
{"ts":1360024966170,"patch":[[{"diffs":[[0,"\n    }\n}"],[1,"\n\n{\n  \"name\": \"mongoose-schema-registry\",\n  \"description\": \"Creates a schema registry that can be used to store and retrieve Schema registries.\",\n  \"tags\": [\n    \"temporary\",\n    \"temp\",\n    \"tempfile\",\n    \"tempdir\",\n    \"tmpfile\",\n    \"tmpdir\",\n    \"security\"\n  ],\n  \"version\": \"0.4.0\",\n  \"author\": {\n    \"name\": \"Bruce Williams\",\n    \"email\": \"bruce@codefluency.com\"\n  },\n  \"directories\": {\n    \"lib\": \"lib\"\n  },\n  \"engines\": [\n    \"node >=0.4.0\"\n  ],\n  \"main\": \"./lib/temp\",\n  \"dependencies\": {},\n  \"devDependencies\": {},\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/bruce/node-temp.git\"\n  },\n  \"readme\": \"node-temp -- temporary files and directories for node.js\\n========================================================\\n\\nHandles generating a unique file/directory name under the appropriate\\nsystem temporary directory, changing the file to an appropriate mode,\\nand supports automatic removal.\\n\\n`temp` has a similar API to the `fs` module.\\n\\nSynopsis\\n--------\\n\\nYou can create temporary files with `open` and `openSync`, temporary\\ndirectories with `mkdir` and `mkdirSync`, or you can get a unique name\\nin the system temporary directory with `path`.\\n\\nWorking copies of the following examples can be found under the\\n`examples` directory.\\n\\n### Temporary Files\\n\\nTo create a temporary file use `open` or `openSync`, passing\\nthem an optional prefix, suffix, or both (see below for details on\\naffixes). The object passed to the callback (or returned) has\\n`path` and `fd` keys:\\n\\n    { path: \\\"/path/to/file\\\",\\n    , fd: theFileDescriptor\\n    }\\n\\nIn this example we write to a temporary file and call out to `grep` and\\n`wc -l` to determine the number of time `foo` occurs in the text.  The\\ntemporary file is chmod'd `0600` and cleaned up automatically when the\\nprocess at exit:\\n\\n    var temp = require('temp'),\\n        fs   = require('fs'),\\n        util  = require('util'),\\n        exec = require('child_process').exec;\\n\\n    // Fake data\\n    var myData = \\\"foo\\\\nbar\\\\nfoo\\\\nbaz\\\";\\n\\n    // Process the data (note: error handling omitted)\\n    temp.open('myprefix', function(err, info) {\\n      fs.write(info.fd, myData);\\n      fs.close(info.fd, function(err) {\\n        exec(\\\"grep foo '\\\" + info.path + \\\"' | wc -l\\\", function(err, stdout) {\\n          util.puts(stdout.trim());\\n        });\\n      });\\n    });\\n\\n### Temporary Directories\\n\\nTo create a temporary directory, use `mkdir` or `mkdirSync`, passing\\nit an optional prefix, suffix, or both (see below for details on affixes).\\n\\nIn this example we create a temporary directory, write to a file\\nwithin it, call out to an external program to create a PDF, and read\\nthe result.  While the external process creates a lot of additional\\nfiles, the temporary directory is removed automatically at exit:\\n\\n    var temp = require('../lib/temp'),\\n        fs   = require('fs'),\\n        util = require('util'),\\n        path = require('path'),\\n        exec = require('child_process').exec;\\n\\n    // For use with ConTeXt, http://wiki.contextgarden.net\\n    var myData = \\\"\\\\\\\\starttext\\\\nHello World\\\\n\\\\\\\\stoptext\\\";\\n\\n    temp.mkdir('pdfcreator', function(err, dirPath) {\\n      var inputPath = path.join(dirPath, 'input.tex')\\n      fs.writeFile(inputPath, myData, function(err) {\\n        if (err) throw err;\\n        process.chdir(dirPath);\\n        exec(\\\"texexec '\\\" + inputPath + \\\"'\\\", function(err) {\\n          if (err) throw err;\\n          fs.readFile(path.join(dirPath, 'input.pdf'), function(err, data) {\\n            if (err) throw err;\\n            sys.print(data);\\n          });\\n        });\\n      });\\n    });\\n\\n### Affixes\\n\\nYou can provide custom prefixes and suffixes when creating temporary\\nfiles and directories. If you provide a string, it is used as the prefix\\nfor the temporary name. If you provide an object with `prefix` and\\n`suffix` keys, they are used for the temporary name.\\n\\nHere are some examples:\\n\\n* `\\\"aprefix\\\"`: A simple prefix, prepended to the filename; this is\\n  shorthand for:\\n* `{prefix: \\\"aprefix\\\"}`: A simple prefix, prepended to the filename\\n* `{suffix: \\\".asuffix\\\"}`: A suffix, appended to the filename\\n  (especially useful when the file needs to be named with specific\\n  extension for use with an external program).\\n* `{prefix: \\\"myprefix\\\", suffix: \\\"mysuffix\\\"}`: Customize both affixes\\n* `null`: Use the defaults for files and directories (prefixes `\\\"f-\\\"`\\n  and `\\\"d-\\\"`, respectively, no suffixes).\\n\\nIn this simple example we read a `pdf`, write it to a temporary file with\\na `.pdf` extension, and close it.\\n\\n    var fs   = require('fs'),\\n        temp = require('temp');\\n\\n    fs.readFile('/path/to/source.pdf', function(err, data) {\\n      temp.open({suffix: '.pdf'}, function(err, info) {\\n        if (err) throw err;\\n        fs.write(info.fd, contents);\\n        fs.close(info.fd, function(err) {\\n          if (err) throw err;\\n          // Do something with the file\\n        });\\n      });\\n    });\\n\\n### Just a path, please\\n\\nIf you just want a unique name in your temporary directory, use\\n`path`:\\n\\n    var fs = require('fs');\\n    var tempName = temp.path({suffix: '.pdf'});\\n    // Do something with tempName\\n    \\nNote: The file isn't created for you, and the  mode is not changed  -- and it\\nwill not be removed automatically at exit.  If you use `path`, it's\\nall up to you.\\n\\nCompatibility\\n-------------\\n\\nWorks with Node.js v0.6.0 on OS X.  Please let me know if you have\\nproblems running it on a later version of Node.js or\\nhave platform problems.\\n\\nInstallation\\n------------\\n\\nInstall it using [npm](http://github.com/isaacs/npm):\\n\\n    $ npm install temp\\n\\nOr get it directly from:\\nhttp://github.com/bruce/node-temp\\n\\nTesting\\n-------\\n\\nFor now, run `test/test-temp.js`:\\n\\n    $ node test/test-temp.js\\n\\nContributing\\n------------\\n\\nYou can find the repository at:\\nhttp://github.com/bruce/node-temp\\n\\nIssues/Feature Requests can be submitted at:\\nhttp://github.com/bruce/node-temp/issues\\n\\nI'd really like to hear your feedback, and I'd love to receive your\\npull-requests!\\n\\nCopyright\\n---------\\n\\nCopyright (c) 2010 Bruce Williams. See LICENSE for details.\\n\",\n  \"_id\": \"temp@0.4.0\",\n  \"_from\": \"temp@0.4.0\"\n}\n"]],"start1":414,"start2":414,"length1":8,"length2":6263}]],"length":6677,"saved":false}
{"ts":1360025099432,"patch":[[{"diffs":[[0,"   \""],[-1,"temporary\",\n    \"temp\",\n    \"tempfile\",\n    \"tempdir\",\n    \"tmpfile\",\n    \"tmpdir\",\n    \"security"],[1,"mongoose\",\n    \"schema\",\n    \"registry\",\n    \"ghiraldi"],[0,"\"\n  "]],"start1":581,"start2":581,"length1":105,"length2":62},{"diffs":[[0,"on\": \"0."],[-1,"4.0"],[1,"0.1"],[0,"\",\n  \"au"]],"start1":654,"start2":654,"length1":19,"length2":19},{"diffs":[[0,"name\": \""],[-1,"Bruce Williams"],[1,"John O'Connor"],[0,"\",\n    \""]],"start1":687,"start2":687,"length1":30,"length2":29},{"diffs":[[0,"\": \""],[-1,"bruce@codefluency"],[1,"sax1johno@gmail"],[0,".com"]],"start1":721,"start2":721,"length1":25,"length2":23},{"diffs":[[0,"node"],[-1," >=0.4.0\""],[1,"\": \">=0.8.1\","],[0,"\n  ]"]],"start1":812,"start2":812,"length1":17,"length2":21},{"diffs":[[0," \"./lib/"],[-1,"temp"],[1,"registry"],[0,"\",\n  \"de"]],"start1":844,"start2":844,"length1":20,"length2":24},{"diffs":[[0,"hub.com/"],[-1,"bruce/node-temp"],[1,"sax1johno/mongoose-schema-registry"],[0,".git\"\n  "]],"start1":968,"start2":968,"length1":31,"length2":50}]],"length":6658,"saved":false}
{"ts":1360025131130,"patch":[[{"diffs":[[0,"\n  \""],[-1,"readme\": \"node-temp -- temporary files and directories for node.js\\n========================================================\\n\\nHandles generating a unique file/directory name under the appropriate\\nsystem temporary directory, changing the file to an appropriate mode,\\nand supports automatic removal.\\n\\n`temp` has a similar API to the `fs` module.\\n\\nSynopsis\\n--------\\n\\nYou can create temporary files with `open` and `openSync`, temporary\\ndirectories with `mkdir` and `mkdirSync`, or you can get a unique name\\nin the system temporary directory with `path`.\\n\\nWorking copies of the following examples can be found under the\\n`examples` directory.\\n\\n### Temporary Files\\n\\nTo create a temporary file use `open` or `openSync`, passing\\nthem an optional prefix, suffix, or both (see below for details on\\naffixes). The object passed to the callback (or returned) has\\n`path` and `fd` keys:\\n\\n    { path: \\\"/path/to/file\\\",\\n    , fd: theFileDescriptor\\n    }\\n\\nIn this example we write to a temporary file and call out to `grep` and\\n`wc -l` to determine the number of time `foo` occurs in the text.  The\\ntemporary file is chmod'd `0600` and cleaned up automatically when the\\nprocess at exit:\\n\\n    var temp = require('temp'),\\n        fs   = require('fs'),\\n        util  = require('util'),\\n        exec = require('child_process').exec;\\n\\n    // Fake data\\n    var myData = \\\"foo\\\\nbar\\\\nfoo\\\\nbaz\\\";\\n\\n    // Process the data (note: error handling omitted)\\n    temp.open('myprefix', function(err, info) {\\n      fs.write(info.fd, myData);\\n      fs.close(info.fd, function(err) {\\n        exec(\\\"grep foo '\\\" + info.path + \\\"' | wc -l\\\", function(err, stdout) {\\n          util.puts(stdout.trim());\\n        });\\n      });\\n    });\\n\\n### Temporary Directories\\n\\nTo create a temporary directory, use `mkdir` or `mkdirSync`, passing\\nit an optional prefix, suffix, or both (see below for details on affixes).\\n\\nIn this example we create a temporary directory, write to a file\\nwithin it, call out to an external program to create a PDF, and read\\nthe result.  While the external process creates a lot of additional\\nfiles, the temporary directory is removed automatically at exit:\\n\\n    var temp = require('../lib/temp'),\\n        fs   = require('fs'),\\n        util = require('util'),\\n        path = require('path'),\\n        exec = require('child_process').exec;\\n\\n    // For use with ConTeXt, http://wiki.contextgarden.net\\n    var myData = \\\"\\\\\\\\starttext\\\\nHello World\\\\n\\\\\\\\stoptext\\\";\\n\\n    temp.mkdir('pdfcreator', function(err, dirPath) {\\n      var inputPath = path.join(dirPath, 'input.tex')\\n      fs.writeFile(inputPath, myData, function(err) {\\n        if (err) throw err;\\n        process.chdir(dirPath);\\n        exec(\\\"texexec '\\\" + inputPath + \\\"'\\\", function(err) {\\n          if (err) throw err;\\n          fs.readFile(path.join(dirPath, 'input.pdf'), function(err, data) {\\n            if (err) throw err;\\n            sys.print(data);\\n          });\\n        });\\n      });\\n    });\\n\\n### Affixes\\n\\nYou can provide custom prefixes and suffixes when creating temporary\\nfiles and directories. If you provide a string, it is used as the prefix\\nfor the temporary name. If you provide an object with `prefix` and\\n`suffix` keys, they are used for the temporary name.\\n\\nHere are some examples:\\n\\n* `\\\"aprefix\\\"`: A simple prefix, prepended to the filename; this is\\n  shorthand for:\\n* `{prefix: \\\"aprefix\\\"}`: A simple prefix, prepended to the filename\\n* `{suffix: \\\".asuffix\\\"}`: A suffix, appended to the filename\\n  (especially useful when the file needs to be named with specific\\n  extension for use with an external program).\\n* `{prefix: \\\"myprefix\\\", suffix: \\\"mysuffix\\\"}`: Customize both affixes\\n* `null`: Use the defaults for files and directories (prefixes `\\\"f-\\\"`\\n  and `\\\"d-\\\"`, respectively, no suffixes).\\n\\nIn this simple example we read a `pdf`, write it to a temporary file with\\na `.pdf` extension, and close it.\\n\\n    var fs   = require('fs'),\\n        temp = require('temp');\\n\\n    fs.readFile('/path/to/source.pdf', function(err, data) {\\n      temp.open({suffix: '.pdf'}, function(err, info) {\\n        if (err) throw err;\\n        fs.write(info.fd, contents);\\n        fs.close(info.fd, function(err) {\\n          if (err) throw err;\\n          // Do something with the file\\n        });\\n      });\\n    });\\n\\n### Just a path, please\\n\\nIf you just want a unique name in your temporary directory, use\\n`path`:\\n\\n    var fs = require('fs');\\n    var tempName = temp.path({suffix: '.pdf'});\\n    // Do something with tempName\\n    \\nNote: The file isn't created for you, and the  mode is not changed  -- and it\\nwill not be removed automatically at exit.  If you use `path`, it's\\nall up to you.\\n\\nCompatibility\\n-------------\\n\\nWorks with Node.js v0.6.0 on OS X.  Please let me know if you have\\nproblems running it on a later version of Node.js or\\nhave platform problems.\\n\\nInstallation\\n------------\\n\\nInstall it using [npm](http://github.com/isaacs/npm):\\n\\n    $ npm install temp\\n\\nOr get it directly from:\\nhttp://github.com/bruce/node-temp\\n\\nTesting\\n-------\\n\\nFor now, run `test/test-temp.js`:\\n\\n    $ node test/test-temp.js\\n\\nContributing\\n------------\\n\\nYou can find the repository at:\\nhttp://github.com/bruce/node-temp\\n\\nIssues/Feature Requests can be submitted at:\\nhttp://github.com/bruce/node-temp/issues\\n\\nI'd really like to hear your feedback, and I'd love to receive your\\npull-requests!\\n\\nCopyright\\n---------\\n\\nCopyright (c) 2010 Bruce Williams. See LICENSE for details.\\n\",\n  \"_id\": \"temp@0.4.0\",\n  \"_from\": \"temp@0.4.0"],[1,"_id\": \"mongoose_registry@0.0.1\",\n  \"_from\": \"mongoose_registry@0.0.1"],[0,"\"\n}\n"]],"start1":1020,"start2":1020,"length1":5638,"length2":76}]],"length":1096,"saved":false}
{"ts":1360025145828,"patch":[[{"diffs":[[0," \"./lib/"],[1,"mongoose_"],[0,"registry"]],"start1":844,"start2":844,"length1":16,"length2":25}]],"length":1105,"saved":false}
{"ts":1360025180842,"patch":[[{"diffs":[[0,"ndencies\": {"],[1,"\n    \"mongoose\": \"*\"\n  "],[0,"},\n  \"reposi"]],"start1":904,"start2":904,"length1":24,"length2":47}]],"length":1128,"saved":false}
{"ts":1360025188050,"patch":[[{"diffs":[[-1,"{\n  \"name\": \"CardBlanc\",\n  \"description\": \"The web application portion of CardBlanc\",\n  \"version\": \"0.0.2\",\n   \"engines\": {\n    \"node\": \"0.8.1\",\n    \"npm\":  \"1.1.49\"\n  },\n  \"author\": {\n    \"name\": \"John O'Connor\",\n    \"email\": \"john@catalyzingconcepts.com\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John O'Connor\",\n      \"email\": \"john@catalyzingconcepts.com\"\n    }\n  ],\n  \"dependencies\": {\n    \"mongoose\": \"*\"\n    }\n}\n\n"],[0,"{\n  "]],"start1":0,"start2":0,"length1":428,"length2":4}]],"length":704,"saved":false}
{"ts":1360025246743,"patch":[[{"diffs":[[0,"eve "],[-1,"Schema registrie"],[1,"mongoose schema"],[0,"s.\","]],"start1":119,"start2":119,"length1":24,"length2":23}]],"length":703,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360026720387,"patch":[[{"diffs":[[0,"cies\": {"],[1,"\n    \"mongoose\": \"*\",\n    \"underscore\": \"*\"\n  "],[0,"},\n  \"de"]],"start1":458,"start2":458,"length1":16,"length2":62},{"diffs":[[0,": {\n"],[-1,"    \"mongoose\": \"*\"\n"],[0,"  },"]],"start1":534,"start2":534,"length1":28,"length2":8}]],"length":729,"saved":false}
{"ts":1360026850740,"patch":[[{"diffs":[[0,"rscore\":"],[1," \"*\",\n    \"nodeunit\":"],[0," \"*\"\n  }"]],"start1":497,"start2":497,"length1":16,"length2":37}]],"length":750,"saved":false}
{"ts":1360027327368,"patch":[[{"diffs":[[0,": {\n"],[-1,"    \"mongoose\": \"*\",\n    \"underscore\": \"*\",\n    \"nodeunit\": \"*\"\n"],[0,"  },"]],"start1":463,"start2":463,"length1":72,"length2":8}]],"length":686,"saved":false}
{"ts":1360027335853,"patch":[[{"diffs":[[0,"ependencies\": {\n"],[1,"    \"mongoose\": \"*\",\n    \"underscore\": \"*\",\n    \"nodeunit\": \"*\"\n"],[0,"  },\n  \"devDepen"]],"start1":451,"start2":451,"length1":32,"length2":96}]],"length":750,"saved":false}
{"ts":1360027451656,"patch":[[{"diffs":[[0,"\": \""],[-1,"git://"],[0,"gith"]],"start1":609,"start2":609,"length1":14,"length2":8}]],"length":744,"saved":false}
{"ts":1360027493166,"patch":[[{"diffs":[[0,"cies\": {"],[-1,"\n  "],[0,"},\n  \"re"]],"start1":550,"start2":550,"length1":19,"length2":16}]],"length":741,"saved":false}
{"ts":1360027534501,"patch":[[{"diffs":[[0,"\n  }"],[-1,",\n  \"devDependencies\": {},\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"github.com/sax1johno/mongoose-schema-registry.git\"\n  },\n  \"_id\": \"mongoose_registry@0.0.1\",\n  \"_from\": \"mongoose_registry@0.0.1\""],[0,"\n}\n"]],"start1":530,"start2":530,"length1":211,"length2":7}]],"length":537,"saved":false}
{"ts":1360027557694,"patch":[[{"diffs":[[0,"\n  \""],[-1,"main\": \"./lib/mongoose_registry\",\n  \"dependencies\": {\n    \"mongoose\": \"*\",\n    \"underscore\": \"*\",\n    \"nodeunit\": \"*\"\n  }"],[1,"devDependencies\": {},\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"github.com/sax1johno/mongoose-schema-registry.git\"\n  },\n  \"_id\": \"mongoose_registry@0.0.1\",\n  \"_from\": \"mongoose_registry@0.0.1\""],[0,"\n}\n"]],"start1":409,"start2":409,"length1":128,"length2":206}]],"length":615,"saved":false}
{"ts":1360027563530,"patch":[[{"diffs":[[0,"\",\n  ],\n"],[1,"  \"main\": \"./lib/mongoose_registry\",\n  \"dependencies\": {\n    \"mongoose\": \"*\",\n    \"underscore\": \"*\",\n    \"nodeunit\": \"*\"\n  },\n"],[0,"  \"devDe"]],"start1":402,"start2":402,"length1":16,"length2":142}]],"length":741,"saved":false}
{"ts":1360027566659,"patch":[[{"diffs":[[0," },\n"],[-1,"  \"directories\": {\n    \"lib\": \"lib\"\n  },\n  \"engines\": [\n    \"node\": \">=0.8.1\",\n  ],"],[0,"\n  \""]],"start1":322,"start2":322,"length1":91,"length2":8}]],"length":658,"saved":false}
{"ts":1360027578638,"patch":[[{"diffs":[[0,"om\"\n  },"],[1,"\n  \"directories\": {\n    \"lib\": \"lib\"\n  },"],[0,"\n\n  \"mai"]],"start1":317,"start2":317,"length1":16,"length2":57}]],"length":699,"saved":false}
{"ts":1360027585531,"patch":[[{"diffs":[[0,"b\"\n  },\n"],[1,"  \"engines\": [\n    \"node\": \">=0.8.1\",\n  ],"],[0,"\n  \"main"]],"start1":359,"start2":359,"length1":16,"length2":58}]],"length":741,"saved":false}
{"ts":1360027592694,"patch":[[{"diffs":[[0," },\n"],[-1,"  \"directories\": {\n    \"lib\": \"lib\"\n  },"],[0,"\n  \""]],"start1":322,"start2":322,"length1":48,"length2":8}]],"length":701,"saved":false}
{"ts":1360027627846,"patch":[[{"diffs":[[0,"m\"\n  },\n"],[1,"  \"directories\": {\n    \"lib\": \"lib\"\n  },"],[0,"\n  \"engi"]],"start1":318,"start2":318,"length1":16,"length2":56},{"diffs":[[0," \"engines\": "],[-1,"["],[1,"{"],[0,"\n    \"node\":"]],"start1":368,"start2":368,"length1":25,"length2":25},{"diffs":[[0,"8.1\",\n  "],[-1,"]"],[1,"}"],[0,",\n  \"mai"]],"start1":399,"start2":399,"length1":17,"length2":17}]],"length":741,"saved":false}
{"ts":1360027659729,"patch":[[{"diffs":[[0,"\n  },\n  "],[1," "],[0,"\"engines"]],"start1":361,"start2":361,"length1":16,"length2":17},{"diffs":[[0,"\": \""],[-1,">="],[0,"0.8.1\",\n"],[1,"    \"npm\":  \"1.1.49\"\n"],[0,"  },"]],"start1":392,"start2":392,"length1":18,"length2":37}]],"length":761,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360047741145,"patch":[[{"diffs":[[0,"sion\": \"0.0."],[-1,"1"],[1,"2"],[0,"\",\n  \"author"]],"start1":227,"start2":227,"length1":25,"length2":25}]],"length":761,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360048585858,"patch":[[{"diffs":[[0,"0.0."],[-1,"2"],[1,"3"],[0,"\",\n "]],"start1":235,"start2":235,"length1":9,"length2":9}]],"length":761,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360088793415,"patch":[[{"diffs":[[0,"node\": \""],[1,">"],[0,"0.8.1\",\n"]],"start1":388,"start2":388,"length1":16,"length2":17}]],"length":762,"saved":false}
{"ts":1360088807544,"patch":[[{"diffs":[[0," },\n"],[-1,"   \"engines\": {\n    \"node\": \">0.8.1\",\n    \"npm\":  \"1.1.49\"\n  },\n"],[0,"  \"m"]],"start1":363,"start2":363,"length1":72,"length2":8}]],"length":698,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360256513958,"patch":[[{"diffs":[[0,"0.0."],[-1,"3"],[1,"4"],[0,"\",\n "]],"start1":235,"start2":235,"length1":9,"length2":9},{"diffs":[[0,"try@0.0."],[-1,"1"],[1,"4"],[0,"\",\n  \"_f"]],"start1":647,"start2":647,"length1":17,"length2":17},{"diffs":[[0,"try@0.0."],[-1,"1"],[1,"4"],[0,"\"\n}\n"]],"start1":685,"start2":685,"length1":13,"length2":13}]],"length":698,"saved":false}
{"ts":1360256519843,"patch":[[{"diffs":[[0,"try@0.0."],[-1,"4"],[1,"1"],[0,"\"\n}\n"]],"start1":685,"start2":685,"length1":13,"length2":13}]],"length":698,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360556956702,"patch":[[{"diffs":[[0,"sion\": \"0.0."],[-1,"4"],[1,"5"],[0,"\",\n  \"author"]],"start1":227,"start2":227,"length1":25,"length2":25},{"diffs":[[0,"0.0."],[-1,"4"],[1,"5"],[0,"\",\n "]],"start1":651,"start2":651,"length1":9,"length2":9},{"diffs":[[0,"try@0.0."],[-1,"1"],[1,"5"],[0,"\"\n}\n"]],"start1":685,"start2":685,"length1":13,"length2":13}]],"length":698,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360657743807,"patch":[[{"diffs":[[0,"egistry@0.0."],[-1,"5"],[1,"6"],[0,"\",\n  \"_from\""]],"start1":643,"start2":643,"length1":25,"length2":25},{"diffs":[[0,"try@0.0."],[-1,"5"],[1,"6"],[0,"\"\n}\n"]],"start1":685,"start2":685,"length1":13,"length2":13}]],"length":698,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360662112060,"patch":[[{"diffs":[[0,"0.0."],[-1,"5"],[1,"6"],[0,"\",\n "]],"start1":235,"start2":235,"length1":9,"length2":9}]],"length":698,"saved":false}
