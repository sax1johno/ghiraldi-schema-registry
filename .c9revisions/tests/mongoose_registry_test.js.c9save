{"ts":1360026862723,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360026888542,"patch":[[{"diffs":[[1,"var nodeunit = require('nodeunit');\nvar mongoose = require('mongoose');\n\n\nexports.registryTest = nodeunit.testCase({\n    'testSaveToTempFile': function(test) {\n        // test.notStrictEqual(user, undefined);\n        pdfUtils.generatePdf(null, function(err, pdffile) {\n            console.log(\"Reached the error we were supposed to reach\");\n        });\n        var string = fs.readFileSync('./Sampler.html', \"UTF-8\");\n        pdfUtils.generatePdf(string, function(err, pdf) {\n            if (err) console.log(\"There was an error: \" + err);\n            // console.log(\"Pdf location = \" + pdf.path);\n            test.notEqual(fs.readFileSync(pdf.path), null);\n        });\n        test.done();\n    }\n});"]],"start1":0,"start2":0,"length1":0,"length2":700}]],"length":700,"saved":false}
{"ts":1360026905287,"patch":[[{"diffs":[[0,"oose');\n"],[1,"var Schema = mongoose.Schema,\n    ObjectId = Schema.ObjectId;"],[0,"\n\nexport"]],"start1":64,"start2":64,"length1":16,"length2":77}]],"length":761,"saved":false}
{"ts":1360026909014,"patch":[[{"diffs":[[0,"hema"],[-1,",\n    ObjectId = Schema.ObjectId;"],[0,"\n\nex"]],"start1":96,"start2":96,"length1":41,"length2":8}]],"length":728,"saved":false}
{"ts":1360026975189,"patch":[[{"diffs":[[0,"test"],[-1,"SaveToTempFile"],[1,"Constructor"],[0,"': f"]],"start1":150,"start2":150,"length1":22,"length2":19},{"diffs":[[0,"    "],[-1,"// test.notStrictEqual(user, undefined);\n        pdfUtils.generatePdf(null, function(err, pdffile) {\n            console.log(\"Reached the error we were supposed to reach\");\n        });\n        var string = fs.readFileSync('./Sampler.html', \"UTF-8\""],[1,"var mongooseRegistry = require('../lib/mongoose_registry');\n        test.done("],[0,");\n    "],[1,"},\n"],[0,"    "],[-1,"pdfUtils.generatePdf(string,"],[1,"'testAdd':"],[0," fun"]],"start1":189,"start2":189,"length1":294,"length2":110},{"diffs":[[0,"ion("],[-1,"err, pdf"],[1,"test"],[0,") {\n"]],"start1":301,"start2":301,"length1":16,"length2":12},{"diffs":[[0,"    "],[1,"\n"],[0,"    "],[-1,"if (err) console.log(\"There was an error: \" + err);\n            // console.log(\"Pdf location = \" + pdf.path);\n"],[1,"},\n    'testRemove': function(test) {\n   "],[0,"     "],[1,"\n"],[0,"    "],[1,"},\n"],[0,"   "],[1," '"],[0,"test"],[-1,".notEqual(fs.readFileSync(pdf.path), null);\n        });\n        test.done();"],[1,"Get': function(test) {\n        "],[0,"\n   "]],"start1":317,"start2":317,"length1":214,"length2":107}]],"length":430,"saved":false}
{"ts":1360027019634,"patch":[[{"diffs":[[0,"test) {\n        "],[1,"var mongooseRegistry = require('../lib/mongoose_registry');\n        var test = new Schema({\n            title:      String,\n            test:       String\n        });"],[0,"\n    },\n    'tes"]],"start1":305,"start2":305,"length1":32,"length2":198}]],"length":596,"saved":false}
{"ts":1360027216471,"patch":[[{"diffs":[[0,"    var "],[-1,"mongooseRegistry"],[1,"reg"],[0," = requi"]],"start1":317,"start2":317,"length1":32,"length2":19},{"diffs":[[0," String\n"],[-1,""],[0,"        "]],"start1":455,"start2":455,"length1":16,"length2":16},{"diffs":[[0,"    });\n"],[1,"        reg.add(test, function(success) {\n            test.ok(success, \"Registration adding should've succceeded\");\n            test.done();\n        })\n"],[0,"    },\n "]],"start1":467,"start2":467,"length1":16,"length2":168}]],"length":735,"saved":false}
{"ts":1360027272490,"patch":[[{"diffs":[[0,"            "],[-1,"test.done();"],[1,"reg.log(function() {\n                test.done();                \n            })"],[0,"\n        })\n"]],"start1":591,"start2":591,"length1":36,"length2":104}]],"length":803,"saved":false}
{"ts":1360028022040,"patch":[[{"diffs":[[0,"dd(test,"],[1," 'test',"],[0," functio"]],"start1":488,"start2":488,"length1":16,"length2":24}]],"length":811,"saved":false}
{"ts":1360028055164,"patch":[[{"diffs":[[0,"var test"],[1,"Schema"],[0," = new S"]],"start1":376,"start2":376,"length1":16,"length2":22}]],"length":817,"saved":false}
{"ts":1360028057708,"patch":[[{"diffs":[[0,"add(test"],[1,"Schema"],[0,", 'test'"]],"start1":493,"start2":493,"length1":16,"length2":22}]],"length":823,"saved":false}
{"ts":1360028060916,"patch":[[{"diffs":[[0,"hema, 't"],[-1,"est"],[0,"', funct"]],"start1":503,"start2":503,"length1":19,"length2":16}]],"length":820,"saved":false}
{"ts":1360028080360,"patch":[[{"diffs":[[0,") {\n        "],[1,"test.done();"],[0,"\n    },\n    "]],"start1":750,"start2":750,"length1":24,"length2":36},{"diffs":[[0,") {\n        "],[1,"test.done();"],[0,"\n    }\n});"]],"start1":810,"start2":810,"length1":22,"length2":34}]],"length":844,"saved":false}
{"ts":1360028120130,"patch":[[{"diffs":[[0,"unction("],[-1,") {"],[1,"schemas) {\n                console.log(JSON.stringify(schemas));"],[0,"\n       "]],"start1":629,"start2":629,"length1":19,"length2":80}]],"length":905,"saved":false}
{"ts":1360028226685,"patch":[[{"diffs":[[0,"unction(test) {\n"],[1,"        var reg = require('../lib/mongoose_registry');\n        var testSchema = new Schema({\n            \n        });\n        reg.add(testSchema, 't', function(success) {\n            reg.remove('t', function(success) {\n                test.ok(success, 'Should have removed the schema from the registry');\n                reg.log(function(schemas) {\n                    console.log(JSON.stringify(schemas));\n                    test.done();\n                });\n            });\n        });\n        \n"],[0,"        test.don"]],"start1":799,"start2":799,"length1":32,"length2":529}]],"length":1402,"saved":false}
{"ts":1360028237278,"patch":[[{"diffs":[[0,"});\n"],[-1,"        \n        test.done();\n"],[0,"    "]],"start1":1299,"start2":1299,"length1":38,"length2":8}]],"length":1372,"saved":false}
{"ts":1360028289515,"patch":[[{"diffs":[[0,") {\n        "],[-1,"test.done("],[1,"var reg = require('../lib/mongoose_registry');\n        var testSchema = new Schema({\n            \n        });\n        reg.add(testSchema, 't', function(success) {\n            reg.get('t', function(schema) {\n                test.equal(schema, testSchema);\n                reg.log(function(schemas) {\n                    console.log(JSON.stringify(schemas));\n                    test.done();\n                });\n            });\n        }"],[0,");\n    }\n});"]],"start1":1338,"start2":1338,"length1":34,"length2":459}]],"length":1797,"saved":false}
{"ts":1360028339542,"patch":[[{"diffs":[[0,"   test."],[-1,"e"],[1,"deepE"],[0,"qual(sch"]],"start1":1570,"start2":1570,"length1":17,"length2":21},{"diffs":[[0,"stSchema"],[1,", 'Schemas should be deep equal to each other.'"],[0,");\n     "]],"start1":1598,"start2":1598,"length1":16,"length2":63}]],"length":1848,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360048372189,"patch":[[{"diffs":[[0,"        });\n"],[1,"    },\n    'testKeys': function(test) {\n        var reg = require('../lib/mongoose_registry');\n        var testSchema = new Schema({});\n        var testSchema2 = new Schema({});\n        var testSchema3 = new Schema({});\n        \n        reg.add(testSchema, 't', function(success) {\n            reg.add(testSchema2, 't2', function(success) {\n                reg.add(testSchema3, 't3', function(success) {\n                    reg.getKeys(function(keys) {\n                        var testArray = ['t', 't2', 't3'];\n                        test.equal(testArray, keys);\n                    })\n                })\n            })\n        })\n"],[0,"    }\n});"]],"start1":1827,"start2":1827,"length1":21,"length2":654}]],"length":2481,"saved":false}
{"ts":1360048379066,"patch":[[{"diffs":[[0," keys);\n"],[1,"                        test.done();\n"],[0,"        "]],"start1":2396,"start2":2396,"length1":16,"length2":53}]],"length":2518,"saved":false}
{"ts":1360048419136,"patch":[[{"diffs":[[0,"   test."],[-1,"e"],[1,"deepE"],[0,"qual(tes"]],"start1":2372,"start2":2372,"length1":17,"length2":21}]],"length":2522,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360255883288,"patch":[[{"diffs":[[0,"      })\n    },\n"],[1,"    'testEvents': function(test) {\n        var reg = require('../lib/mongoose_registry');\n        var testSchema = new Schema({\n            title:      String,\n            test:       String\n        });\n        reg.add(testSchema, 't', function(success) {\n            test.ok(success, \"Registration adding should've succceeded\");\n            reg.log(function(schemas) {\n                console.log(JSON.stringify(schemas));\n                test.done();                \n            })\n        })\n    },    \n"],[0,"    'testRemove'"]],"start1":764,"start2":764,"length1":32,"length2":538}]],"length":3028,"saved":false}
{"ts":1360255962632,"patch":[[{"diffs":[[0,"    reg."],[-1,"add(testSchema, 't"],[1,"on('add"],[0,"', funct"]],"start1":987,"start2":987,"length1":34,"length2":23},{"diffs":[[0,"'add', function("],[-1,"success"],[1,"tag, schema"],[0,") {\n            "]],"start1":998,"start2":998,"length1":39,"length2":43},{"diffs":[[0,"    "],[-1,"test.ok(success, \"Registration adding should've succceeded\");\n            reg.log(function(schemas) {\n                console.log("],[1,"console.log(\"Tag \" + tag + \" was added with schema \" + "],[0,"JSON"]],"start1":1037,"start2":1037,"length1":138,"length2":63},{"diffs":[[0,"stringify(schema"],[-1,"s"],[0,"));\n            "]],"start1":1101,"start2":1101,"length1":33,"length2":32},{"diffs":[[0,"));\n            "],[-1,"    "],[0,"test.done();    "]],"start1":1117,"start2":1117,"length1":36,"length2":32},{"diffs":[[0,"e();"],[-1,"  "],[1,"\n"],[0,"        "],[-1,"      \n            })"],[1,"});\n        reg.add(testSchema, 't');"],[0,"\n   "]],"start1":1141,"start2":1141,"length1":39,"length2":54},{"diffs":[[0,"');\n        "],[-1,"})"],[0,"\n    },    \n"]],"start1":1188,"start2":1188,"length1":26,"length2":24}]],"length":2954,"saved":false}
{"ts":1360255972506,"patch":[[{"diffs":[[0,"test"],[1,"Add"],[0,"Event"],[-1,"s"],[0,"': f"]],"start1":785,"start2":785,"length1":14,"length2":16}]],"length":2956,"saved":false}
{"ts":1360256005831,"patch":[[{"diffs":[[0," \n    },"],[-1,"    "],[0,"\n"],[1,""],[0,"    'tes"]],"start1":1201,"start2":1201,"length1":21,"length2":17},{"diffs":[[0,"});\n        });\n"],[-1,""],[0,"    },\n"],[1,"    'testRemoveEvent': function(test) {\n        var reg = require('../lib/mongoose_registry');\n        var testSchema = new Schema({\n            \n        });\n        reg.add(testSchema, 't', function(success) {\n            reg.remove('t', function(success) {\n                test.ok(success, 'Should have removed the schema from the registry');\n                reg.log(function(schemas) {\n                    console.log(JSON.stringify(schemas));\n                    test.done();\n                });\n            });\n        });\n    },    \n"],[0,"    'testGet': f"]],"start1":1717,"start2":1717,"length1":39,"length2":578}]],"length":3491,"saved":false}
{"ts":1360256050832,"patch":[[{"diffs":[[0,"reg."],[-1,"add(testSchema, 't', function(success) {\n            reg."],[1,"on('"],[0,"remove"],[-1,"('t"],[0,"', f"]],"start1":1906,"start2":1906,"length1":74,"length2":18},{"diffs":[[0,"ove', function(s"],[-1,"uccess"],[1,"chema"],[0,") {\n            "]],"start1":1917,"start2":1917,"length1":38,"length2":37},{"diffs":[[0,"    "],[-1,"    test.ok(success, 'Should have removed the schema from the registry');\n                reg.log(function(schemas) {\n                    console.log("],[1,"console.log(\"schema = \" + "],[0,"JSON"]],"start1":1950,"start2":1950,"length1":158,"length2":34},{"diffs":[[0,"stringify(schema"],[-1,"s"],[0,"));\n            "]],"start1":1985,"start2":1985,"length1":33,"length2":32},{"diffs":[[0,"            "],[-1,"   "],[-1,"     "],[0,"test.done();"]],"start1":2005,"start2":2005,"length1":32,"length2":24},{"diffs":[[0,"    "],[1,"})\n"],[0,"        "],[-1,"});\n            }"],[1,"reg.add(testSchema, 't', function(success) {\n            reg.remove('t'"],[0,");\n "]],"start1":2034,"start2":2034,"length1":33,"length2":90}]],"length":3358,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360556497202,"patch":[[{"diffs":[[0,"ion(keys) {\n"],[1,"                        console.log(\"keys = \" + JSON.stringify(keys));\n"],[0,"            "]],"start1":3116,"start2":3116,"length1":24,"length2":95}]],"length":3429,"saved":false}
{"ts":1360556929812,"patch":[[{"diffs":[[0,") {\n"],[-1,"                        console.log(\"keys = \" + JSON.stringify(keys));\n"],[0,"    "]],"start1":3124,"start2":3124,"length1":79,"length2":8}]],"length":3358,"saved":false}
{"ts":1360558525049,"patch":[[{"diffs":[[0,"        reg.add("],[1,"'t', "],[0,"testSchema, 't',"]],"start1":481,"start2":481,"length1":32,"length2":37},{"diffs":[[0,"'t', testSchema,"],[-1," 't',"],[0," function(succes"]],"start1":497,"start2":497,"length1":37,"length2":32}]],"length":3358,"saved":false}
{"ts":1360558536680,"patch":[[{"diffs":[[0,"        reg.add("],[1,"'t', "],[0,"testSchema, 't')"]],"start1":1160,"start2":1160,"length1":32,"length2":37},{"diffs":[[0,"stSchema"],[-1,", 't'"],[0,");\n     "]],"start1":1183,"start2":1183,"length1":21,"length2":16}]],"length":3358,"saved":false}
{"ts":1360558547282,"patch":[[{"diffs":[[0,"        reg.add("],[1,"'t', "],[0,"testSchema, 't',"]],"start1":1363,"start2":1363,"length1":32,"length2":37},{"diffs":[[0,"'t', testSchema,"],[-1," 't',"],[0," function(succes"]],"start1":1379,"start2":1379,"length1":37,"length2":32}]],"length":3358,"saved":false}
{"ts":1360558557880,"patch":[[{"diffs":[[0,"        reg.add("],[1,"'t', "],[0,"testSchema, 't',"]],"start1":2041,"start2":2041,"length1":32,"length2":37},{"diffs":[[0,"'t', testSchema,"],[-1," 't',"],[0," function(succes"]],"start1":2057,"start2":2057,"length1":37,"length2":32}]],"length":3358,"saved":false}
{"ts":1360558570005,"patch":[[{"diffs":[[0,"        reg.add("],[1,"'t', "],[0,"testSchema, 't',"]],"start1":2296,"start2":2296,"length1":32,"length2":37},{"diffs":[[0,"'t', testSchema,"],[-1," 't',"],[0," function(succes"]],"start1":2312,"start2":2312,"length1":37,"length2":32}]],"length":3358,"saved":false}
{"ts":1360558592120,"patch":[[{"diffs":[[0,"        reg.add("],[1,"'t', "],[0,"testSchema, 't',"]],"start1":2904,"start2":2904,"length1":32,"length2":37},{"diffs":[[0,"ema,"],[-1," 't',"],[0," fun"]],"start1":2932,"start2":2932,"length1":13,"length2":8},{"diffs":[[0,"        reg.add("],[1,"'t2', "],[0,"testSchema2, 't2"]],"start1":2961,"start2":2961,"length1":32,"length2":38},{"diffs":[[0,"Schema2,"],[-1," 't2',"],[0," functio"]],"start1":2987,"start2":2987,"length1":22,"length2":16},{"diffs":[[0,"reg.add("],[1,"'t3', "],[0,"testSche"]],"start1":3032,"start2":3032,"length1":16,"length2":22},{"diffs":[[0,"ma3,"],[-1," 't3',"],[0," fun"]],"start1":3054,"start2":3054,"length1":14,"length2":8}]],"length":3358,"saved":false}
